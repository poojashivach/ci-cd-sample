# This workflow runs CI checks on all pushes/PRs and deploys to GitHub Pages on main branch
name: CI-CD Integration

# Trigger CI on all pushes and PRs, and CD only on pushes to main
# on:
#   push: # Trigger on any push
#   pull_request: # Trigger on any pull request

on:
  push:
    branches: ["main", "dev", "stagging"] # Trigger on push to main, dev, or stagging branches
  pull_request:
    branches: ["main", "dev", "stagging"] # Trigger on PR to main, dev, or stagging branches
  workflow_dispatch:
    inputs:
      run-name:
        description: 'Custom run name (optional)'
        required: false
        default: ''
# Note: The workflow name itself cannot be dynamic, but you can set a dynamic run name for workflow_dispatch runs.

permissions:
  id-token: write
  contents: read
  pages: write

jobs:
  # CI Job: Lint, Format, Test, etc.
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Echo Run Name and Commit Timestamp
        run: |
          echo "Workflow Run Name: ${{ github.event.inputs.run-name != '' && github.event.inputs.run-name || format('CI-CD Run {0}', github.run_id) }}"
          echo "Commit Timestamp: ${{ github.event.head_commit.timestamp }}"
      - uses: actions/checkout@v4 # Checkout repository code
        with:
          fetch-depth: 0 # Fetch all history for accurate commit info

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Set up Node.js environment
        with:
          node-version: '22.x' # Use Node.js version 22.x
          cache: 'npm' # Enable npm cache for faster installs
          cache-dependency-path: package-lock.json # Cache based on lock file
          
      - name: Install Dependencies
        run: npm ci # Install dependencies using clean install

      - name: Run Lint
        run: npm run lint # Run linter to check code quality

      - name: Run Formatter
        run: npm run lint:format # Run code formatter

      # Uncomment below to enable commit message linting
      # - name: Check Commit Messages
      #   uses: wagoid/commitlint-github-action@v5 # Lint commit messages
      #   with:
      #     configFile: commitlint.config.js # Use custom commitlint config

      # Add more CI steps as needed (e.g., tests, coverage)
 
  # CD Job: Build and Deploy to Production (only on main branch)
  build-and-deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Echo Run Name and Commit Timestamp
        run: |
          echo "Workflow Run Name: ${{ github.event.inputs.run-name != '' && github.event.inputs.run-name || format('CI-CD Run {0}', github.run_id) }}"
          echo "Commit Timestamp: ${{ github.event.head_commit.timestamp }}"
      - uses: actions/checkout@v4 # Checkout repository code
        with:
          persist-credentials: false # Recommended for GitHub Pages

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Set up Node.js environment
        with:
          node-version: '22.x' # Use Node.js version 22.x
          cache: 'npm' # Enable npm cache for faster installs
          cache-dependency-path: package-lock.json # Cache based on lock file

      - name: Install Dependencies
        run: npm ci # Install dependencies using clean install

      # - name: Set env variables
      #   run: echo "Setting environment variables"
      #   env:
      #     REACT_APP_MY_SECRET: ${{ secrets.YOUR_SECRET_NAME }}   

      - name: Build
        env:
          REACT_APP_MY_SECRET: ${{ secrets.YOUR_SECRET_NAME }}      
        run: npm run build # Build the project

      - name: Upload Github pages artifacts
        uses: actions/upload-pages-artifact@v4 # Upload build output as artifact
        with:
          path: dist # Specify build output directory

      - name: Echo Deploy Message
        run: echo "Deploying to production URL..." # Log deploy message

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4 # Deploy artifact to GitHub Pages
        # No inputs needed; artifact is used automatically

# End of workflow
